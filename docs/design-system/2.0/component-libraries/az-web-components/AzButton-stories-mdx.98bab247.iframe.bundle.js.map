{"version":3,"file":"AzButton-stories-mdx.98bab247.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AA4DA;AAIA","sources":["webpack://@az-digital/az-web-component-storybook/../../component-libraries/web-components/AzButton/index.js"],"sourcesContent":["import { LitElement, html } from 'lit-element';\nimport { eventDataLayerPush } from '../mixins/shadow-events-datalayer';\nimport { DelegateFocusMixin } from '../mixins/delegate-focus-mixin';\nimport azButtonStyles from './style';\n\nexport default class AzButton extends DelegateFocusMixin(LitElement) {\n  static get properties() {\n    return {\n      /**\n      * Set to URL to render <a> element styled as button.\n      */\n      link: {\n        type: String,\n        reflect: true,\n      },\n      target: {\n        type: String,\n        reflect: true,\n      },\n      toggle: {\n        type: String,\n        reflect: true,\n      },\n      event: {\n        type: String,\n        reflect: true,\n      },\n      elmid: {\n        type: String,\n        reflect: true,\n      },\n      value: {\n        type: String,\n        reflect: true,\n      },\n    };\n  }\n\n  static get styles() {\n    return [azButtonStyles];\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    super.attributeChangedCallback(name, oldVal, newVal);\n  }\n\n  changeAttributes() {\n    this.setAttribute('closed', 'true');\n    this.setAttribute('aria-expanded', 'true');\n    this.requestUpdate();\n  }\n\n  handleClick(e) {\n    eventDataLayerPush(e, '');\n    if (this.event) {\n      const event = new Event(this.event);\n      document.querySelector(this.target).dispatchEvent(event);\n    } else {\n      const openAzOffCanvasMenu = new Event('open-az-offcanvas-menu');\n      document.querySelector(this.target).dispatchEvent(openAzOffCanvasMenu);\n    }\n  }\n\n  render() {\n    return html`\n      ${this.link\n    ? html`<a class=\"button\" href=\"${this.link}\" ?disabled=\"${this.disabled}\" @click=\"${eventDataLayerPush}\" id=\"${this.elmid}\">${this.value}<slot></slot></a>`\n    : html`<button type=\"button\" class=\"button\" ?disabled=\"${this.disabled}\" role=\"presentation\" @click=\"${this.handleClick}\" id=\"${this.elmid}\">${this.value}<slot></slot></button>`}\n    `;\n  }\n\n  firstUpdated() {\n    super.firstUpdated();\n    this.setAttribute('role', 'button');\n  }\n\n  /**\n   * @protected\n   */\n  get focusElement() {\n    return this.shadowRoot.querySelector('.button');\n  }\n}\n\ncustomElements.get('az-button') || customElements.define('az-button', AzButton);\n"],"names":[],"sourceRoot":""}